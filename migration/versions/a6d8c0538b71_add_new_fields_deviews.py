"""add new fields deviews

Revision ID: a6d8c0538b71
Revises: b2e3b229115b
Create Date: 2024-11-20 03:35:22.467506

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a6d8c0538b71'
down_revision: Union[str, None] = 'b2e3b229115b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_review_movies', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('user_review_movies', sa.Column('updated_at', sa.DateTime(), onupdate=sa.text('now()'), server_default=sa.text('now()'), nullable=False))
    statementstatus = postgresql.ENUM('positive', 'negative', 'neutral', name='statementreviewtype')
    statementstatus.create(op.get_bind())
    op.add_column('user_review_movies', sa.Column('header', sa.String(), nullable=False))
    op.add_column('user_review_movies', sa.Column('review', sa.String(), nullable=False))
    op.add_column('user_review_movies', sa.Column('statement', sa.Enum('positive', 'negative', 'neutral', name='statementreviewtype'), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user_review_movies', 'updated_at')
    op.drop_column('user_review_movies', 'created_at')
    op.drop_column('user_review_movies', 'statement')
    op.drop_column('user_review_movies', 'review')
    statementstatus = postgresql.ENUM('positive', 'negative', 'neutral', name='statementreviewtype')
    statementstatus.drop(op.get_bind())
    # ### end Alembic commands ###
