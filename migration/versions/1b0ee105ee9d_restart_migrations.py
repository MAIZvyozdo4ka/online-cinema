"""Restart Migrations

Revision ID: 1b0ee105ee9d
Revises: 
Create Date: 2024-11-12 13:44:25.137036

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from migration.TableInit import TableInit


# revision identifiers, used by Alembic.
revision: str = '1b0ee105ee9d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    movies_table = op.create_table('movies',
    sa.Column('id', sa.Integer(), sa.Identity(always=False, start=1, increment=1), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('movies_rating_count', sa.Integer(), nullable=False, server_default='0'),
    sa.Column('movies_rating_sum', sa.Integer(), nullable=False, server_default='0'),
    sa.Column('genres', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), sa.Identity(always=False, start=1, increment=1), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False, server_default = 'False'),
    sa.Column('hash_password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('issued_jwt_tokens',
    sa.Column('jti', sa.UUID(), nullable=False),
    sa.Column('device_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('jti')
    )
    links_table = op.create_table('links',
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('imdb_id', sa.Integer(), nullable=True),
    sa.Column('tmbd_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('movie_id'),
    sa.UniqueConstraint('imdb_id'),
    sa.UniqueConstraint('tmbd_id')
    )
    op.create_table('user_movie_rating',
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('movie_id', 'user_id')
    )
   
    TableInit.insert_data_from_file(movies_table,
                                    'migration/versions/csv_data/new_movie_clear.csv',
                                    ['id', 'title', 'genres'],
                                    [0]
                                )
    TableInit.insert_data_from_file(links_table,
                                    'migration/versions/csv_data/new_link_clear.csv',
                                    ['movie_id', 'imdb_id', 'tmbd_id']
                                )
     ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_movie_rating')
    op.drop_table('links')
    op.drop_table('issued_jwt_tokens')
    op.drop_table('users')
    op.drop_table('movies')
    # ### end Alembic commands ###
